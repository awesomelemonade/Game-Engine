#version 400 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

out vec2 passTextureCoords;
out vec3 surfaceNormal;
out vec3 lightVector;
out vec3 cameraVector;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;

uniform vec3 lightPosition;

void main(void){
	vec4 worldPosition = modelMatrix * vec4(position, 1.0);
	
	gl_Position = projectionMatrix * viewMatrix * worldPosition;
	passTextureCoords = textureCoords;
	
	surfaceNormal = (modelMatrix * vec4(normal, 0.0)).xyz;
	lightVector = lightPosition - worldPosition.xyz;
	cameraVector = (inverse(viewMatrix)*vec4(0.0, 0.0, 0.0, 1.0)).xyz-worldPosition.xyz;
}